<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_synchro.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>